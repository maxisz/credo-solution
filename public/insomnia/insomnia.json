{"_type":"export","__export_format":4,"__export_date":"2023-07-17T13:17:59.905Z","__export_source":"insomnia.desktop.app:v2023.2.2","resources":[{"_id":"req_50861073ad3a488b9f4f5bb8d1daf1da","parentId":"fld_9073f3a4429f4f6db9cc0c79472e7ed8","modified":1689597725004,"created":1689321055977,"url":"http://127.0.0.1:8000/api/rates/","name":"Rates & Provider Create","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"provider\" : \"airtel\",\n\t\"is_buying\" : \"true\",\n\t\"is_selling\" : \"false\",\n\t\"selling_rate\" : 200,\n\t\"buying_rate\" : 20,\n\t\"balance\" : 2000\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1689346195772.375,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_9073f3a4429f4f6db9cc0c79472e7ed8","parentId":"fld_3c681a2f46c248c080e46496c754fdc9","modified":1689406581002,"created":1689358360110,"name":"rates Api","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1689358423661.25,"_type":"request_group"},{"_id":"fld_3c681a2f46c248c080e46496c754fdc9","parentId":"wrk_7738a5d4c5ba4c1b99da715b479dceb7","modified":1689358347982,"created":1689358347982,"name":"Credo Solution","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1689358347982,"_type":"request_group"},{"_id":"wrk_7738a5d4c5ba4c1b99da715b479dceb7","parentId":null,"modified":1689599763672,"created":1689321055965,"name":"Credit Vendoring  Backend Api","description":"","scope":"design","_type":"workspace"},{"_id":"req_85a1e3fc1915467a8ee9fbec879f27e0","parentId":"fld_9073f3a4429f4f6db9cc0c79472e7ed8","modified":1689582750357,"created":1689341499238,"url":"http://127.0.0.1:8000/api/rates/","name":"all rates ","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1689346195770.8125,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_3ae705953b834f4fa5bcce08c98aaae5","parentId":"fld_9073f3a4429f4f6db9cc0c79472e7ed8","modified":1689361942147,"created":1689342886807,"url":"http://127.0.0.1:8000/api/rates/1","name":"single rate","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1689346195769.25,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_1f547190c57e4aaab723088387169f2e","parentId":"fld_9073f3a4429f4f6db9cc0c79472e7ed8","modified":1689361946939,"created":1689343228737,"url":"http://127.0.0.1:8000/api/rates/1","name":"Rates & Provider update","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"provider\" : \"telkom,\",\n\t\"is_buying\" : \"true\",\n\t\"is_selling\" : \"false\",\n\t\"selling_rate\" : 200,\n\t\"buying_rate\" : 20,\n\t\"balance\" : 2000\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1689346195766.125,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_9c4cb6342a574ad7b2c0ebd5e7371b2a","parentId":"fld_9073f3a4429f4f6db9cc0c79472e7ed8","modified":1689406595466,"created":1689346195788,"url":"http://127.0.0.1:8000/api/rates/2m","name":"Rates & Provider Deleted","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1689346195713,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_bcd81114d510475d91a9a934e1a99431","parentId":"fld_7d4209f23ed943f4befc610b42422d0c","modified":1689410767351,"created":1689360303728,"url":"http://127.0.0.1:8000/api/categories/","name":"categories Create","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t   \"title\": \"Test category\",\n\t\t\t\"slug\": \"test-category 1\",\n\t\t\t\"provider_id\":2,\n\t\t\t\"description\": \"test description for test-category\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1689358435877,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_7d4209f23ed943f4befc610b42422d0c","parentId":"fld_3c681a2f46c248c080e46496c754fdc9","modified":1689406582328,"created":1689358432740,"name":"Categories Api","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1689358410043.125,"_type":"request_group"},{"_id":"req_2bfedc8919aa4a87a78aaf16bc701025","parentId":"fld_7d4209f23ed943f4befc610b42422d0c","modified":1689361919382,"created":1689360576137,"url":"http://127.0.0.1:8000/api/categories/","name":"all categories ","description":"","method":"GET","body":{"mimeType":"application/json","text":"{\n\t   \"title\": \"The title field is required.\",\n\t\t\t\"slug\": \"The slug field is required.\",\n\t\t\t\"provider_id\":2,\n\t\t\t\"description\": \"The description field is required.\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1689356905865.875,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_a322ace8eecb43a9b508b8fb4b911ed4","parentId":"fld_7d4209f23ed943f4befc610b42422d0c","modified":1689410786870,"created":1689360753003,"url":"http://127.0.0.1:8000/api/categories/1","name":"single category","description":"","method":"GET","body":{"mimeType":"application/json","text":"{\n\t   \"title\": \"The title field is required.\",\n\t\t\t\"slug\": \"The slug field is required.\",\n\t\t\t\"provider_id\":2,\n\t\t\t\"description\": \"The description field is required.\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1689356140860.3125,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_5c700bd83ca54ac3a7e10c7feb54ba32","parentId":"fld_7d4209f23ed943f4befc610b42422d0c","modified":1689361954147,"created":1689361036715,"url":"http://127.0.0.1:8000/api/categories/1","name":"categories update","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t   \"title\": \"Test category\",\n\t\t\t\"slug\": \"test-category\",\n\t\t\t\"provider_id\":2,\n\t\t\t\"description\": \"test description for test-category\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1689355375854.75,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_3a5ceef332214eda98884325a91617e9","parentId":"fld_7d4209f23ed943f4befc610b42422d0c","modified":1689361914180,"created":1689361911977,"url":"http://127.0.0.1:8000/api/rates/2m","name":"categories Deleted","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1689349255760.25,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_4ad7fc6a576e4b0eb5adedcd61047b97","parentId":"fld_2894eb26ba524808998e6ce6fbf99dca","modified":1689594849978,"created":1689362456457,"url":"http://127.0.0.1:8000/api/offers/","name":"offers Create","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t   \"name\": \"The name field is required.\",\n\t\t\t\"price\": 222,\n\t\t\t\"category_id\":1\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1689358435877,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_2894eb26ba524808998e6ce6fbf99dca","parentId":"fld_3c681a2f46c248c080e46496c754fdc9","modified":1689362456455,"created":1689362456455,"name":"Offers Api","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1689358396425,"_type":"request_group"},{"_id":"req_75155c6d1a004f2b869f1e260758dd00","parentId":"fld_2894eb26ba524808998e6ce6fbf99dca","modified":1689597794786,"created":1689362456462,"url":"http://127.0.0.1:8000/api/offers?page=3","name":"all offers","description":"","method":"GET","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1689356905865.875,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_99f311067d8544caa9cc85f79e93b2d8","parentId":"fld_2894eb26ba524808998e6ce6fbf99dca","modified":1689594861891,"created":1689362456468,"url":"http://127.0.0.1:8000/api/offers/1","name":"single offer","description":"","method":"GET","body":{"mimeType":"application/json","text":"{\n\t   \"title\": \"The title field is required.\",\n\t\t\t\"slug\": \"The slug field is required.\",\n\t\t\t\"provider_id\":2,\n\t\t\t\"description\": \"The description field is required.\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1689356140860.3125,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_840071ff87be448e8ef5cef0e96955ff","parentId":"fld_2894eb26ba524808998e6ce6fbf99dca","modified":1689409592738,"created":1689362456473,"url":"http://127.0.0.1:8000/api/offers/2","name":"offer update","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t   \t\"name\": \"The name field is required.\",\n\t\t\t\"price\":22,\n\t\t\t\"category_id\": 1\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1689355375854.75,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7453a11a879f4505a3ca58e8a35aef20","parentId":"fld_2894eb26ba524808998e6ce6fbf99dca","modified":1689406519012,"created":1689362456477,"url":"http://127.0.0.1:8000/api/offers/1","name":"offer Delete","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1689349255760.25,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_8abaabe62f274728b052295cac642e3a","parentId":"fld_a4b514ebd5e04d8da0788c4a276c3f65","modified":1689596758927,"created":1689581258993,"url":"http://127.0.0.1:8000/api/payments","name":"initiate payment","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"type\" : \"airtime\",\n\t\"type_id\" : 1,\n\t\"phone\" : 25411015695,\n\t\"amount\" : 2\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1689581258993,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_a4b514ebd5e04d8da0788c4a276c3f65","parentId":"fld_3c681a2f46c248c080e46496c754fdc9","modified":1689594957631,"created":1689581252413,"name":"Payments","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1689358396375,"_type":"request_group"},{"_id":"req_6a34feac23e94fd99a7c82992a351c30","parentId":"fld_a4b514ebd5e04d8da0788c4a276c3f65","modified":1689596776288,"created":1689588200415,"url":"http://127.0.0.1:8000/api/payments/YWlydGltZSwxLDIsMjU0MTEwMTU2OTUsMTI6MjY6MDA6MDc=","name":"single  payment query","description":"uses account id to get the payment data","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1689581258943,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_315d876b32bf4bb3892a82b4e3279cb2","parentId":"fld_0de5f32d0c8247a9afebe2c597f0fac7","modified":1689598956139,"created":1689596860341,"url":"http://127.0.0.1:8000/api/orders","name":"List of all orders","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1689596860341,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_0de5f32d0c8247a9afebe2c597f0fac7","parentId":"fld_3c681a2f46c248c080e46496c754fdc9","modified":1689596859687,"created":1689596856312,"name":"Orders","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1689358396325,"_type":"request_group"},{"_id":"req_688893c03aca4891a7aa37dbabf03dc3","parentId":"fld_0de5f32d0c8247a9afebe2c597f0fac7","modified":1689598713691,"created":1689598697556,"url":"http://127.0.0.1:8000/api/orders/pending","name":"List of pending orders","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1689589059667,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_6995767b55ac4df9956537a32e9c9e6f","parentId":"fld_0de5f32d0c8247a9afebe2c597f0fac7","modified":1689598706983,"created":1689598706983,"url":"http://127.0.0.1:8000/api/orders/fullfilled","name":"List of fullfileld orders","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1689585159330,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_19b62701499c49719b7958343b9f63b4","parentId":"fld_0de5f32d0c8247a9afebe2c597f0fac7","modified":1689598897943,"created":1689598893144,"url":"http://127.0.0.1:8000/api/orders/airtime","name":"List of airtime orders","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1689583209161.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_24d601a30f4241ec88f55c9e793a107e","parentId":"fld_0de5f32d0c8247a9afebe2c597f0fac7","modified":1689599108168,"created":1689599104334,"url":"http://127.0.0.1:8000/api/orders/offers","name":"List of offer orders","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1689582234077.25,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_5ca412bc60884d57af29b904748b8bc5","parentId":"fld_0de5f32d0c8247a9afebe2c597f0fac7","modified":1689599411141,"created":1689599175753,"url":"http://127.0.0.1:8000/api/orders/1","name":"update Order","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"is_fullfilled\" : \"yes\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1689581746535.125,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_8e60c672e4aa30a5027e5f50955b770de9ccbc8f","parentId":"wrk_7738a5d4c5ba4c1b99da715b479dceb7","modified":1689321055970,"created":1689321055970,"name":"Base Environment","data":{},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1689321055970,"_type":"environment"},{"_id":"jar_8e60c672e4aa30a5027e5f50955b770de9ccbc8f","parentId":"wrk_7738a5d4c5ba4c1b99da715b479dceb7","modified":1689336478293,"created":1689321055973,"name":"Default Jar","cookies":[{"key":"XSRF-TOKEN","value":"eyJpdiI6Ik1EclBoeWlMcTlxYTRGUGp6TmJKUWc9PSIsInZhbHVlIjoibE1aR0dKYUxSV3ZiSFhsVUpwQ3J4Y3RzZHBDUjhrNndiWHZuZlBxbTR1QUxrcm9UVWhUcUROMCtFbkh0aWwrMjN3dlN4dVRFcGw3V3h3UjgrRTFQTFpxaDc3N2ZmUnprL0hsd25POTYrVU9NWW9YOUEreXY2WCsvMm50V29QTmQiLCJtYWMiOiI5MmU5ZGEyYWE0NWYyN2ZkYmM2MjZmZWIzYjIzY2VjMzdlZjVjMTI5NGI1NDE1N2Q0MGE2YTJjOWM4YTAzN2MwIiwidGFnIjoiIn0%3D","expires":"2023-07-14T14:07:58.000Z","maxAge":7200,"domain":"127.0.0.1","path":"/","extensions":["samesite=lax"],"hostOnly":true,"creation":"2023-07-14T12:06:16.568Z","lastAccessed":"2023-07-14T12:07:58.292Z","id":"07316040695275805"},{"key":"laravel_session","value":"eyJpdiI6IlpuOWJyY3NqNU9xRk5vQXlVeUNqNlE9PSIsInZhbHVlIjoiaGllc0NqYXB2emFCTTdQTUE0bGwzdGNibVowLzNWT2NKOUpZYzg4NTBZcWtzSXZyNUFTbzAwVnNhQ3Z5VEZDUFI3OWVTZ3FFclQ1Qis1N1lmUGVnY3pqY0NzQy9UemZWQkp3WUxFZnRueXR4SHEzTk1Ybi9PR3lzUkUzSFIyWVQiLCJtYWMiOiJhNDJhNDE5NDk4N2NkMDI0YjI2MDgxZjg5MGEyZTExNmM2YTY1OWJkNGEwMzEzNzg1ZDQxMzJlYmFjODRkZWE1IiwidGFnIjoiIn0%3D","expires":"2023-07-14T14:07:58.000Z","maxAge":7200,"domain":"127.0.0.1","path":"/","httpOnly":true,"extensions":["samesite=lax"],"hostOnly":true,"creation":"2023-07-14T12:06:16.568Z","lastAccessed":"2023-07-14T12:07:58.292Z","id":"710791602033642"}],"_type":"cookie_jar"},{"_id":"spc_098023bdc79645eab8878f334fd73696","parentId":"wrk_7738a5d4c5ba4c1b99da715b479dceb7","modified":1689599808486,"created":1689599808486,"fileName":"Credit Vendoring  Backend Api","contents":"openapi: 3.0.0\ninfo:\n  description: \"This is a sample server Petstore server.  You can find out more about\n    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key\n    `special-key` to test the authorization filters.\"\n  version: 1.0.2\n  title: Swagger Petstore\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\ntags:\n  - name: pet\n    description: Everything about your Pets\n    externalDocs:\n      description: Find out more\n      url: http://swagger.io\n  - name: store\n    description: Access to Petstore orders\n  - name: user\n    description: Operations about user\n    externalDocs:\n      description: Find out more about our store\n      url: http://swagger.io\npaths:\n  /pet:\n    post:\n      tags:\n        - pet\n      summary: Add a new pet to the store\n      description: \"\"\n      operationId: addPet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"405\":\n          description: Invalid input\n    put:\n      tags:\n        - pet\n      summary: Update an existing pet\n      description: \"\"\n      operationId: updatePet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n        \"405\":\n          description: Validation exception\n  /pet/findByStatus:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid status value\n  /pet/findByTags:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by tags\n      description: Multiple tags can be provided with comma separated strings. Use tag1,\n        tag2, tag3 for testing.\n      operationId: findPetsByTags\n      parameters:\n        - name: tags\n          in: query\n          description: Tags to filter by\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid tag value\n      deprecated: true\n  \"/pet/{petId}\":\n    get:\n      tags:\n        - pet\n      summary: Find pet by ID\n      description: Returns a single pet\n      operationId: getPetById\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n    post:\n      tags:\n        - pet\n      summary: Updates a pet in the store with form data\n      description: \"\"\n      operationId: updatePetWithForm\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet that needs to be updated\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Updated name of the pet\n                  type: string\n                status:\n                  description: Updated status of the pet\n                  type: string\n      responses:\n        \"405\":\n          description: Invalid input\n    delete:\n      tags:\n        - pet\n      summary: Deletes a pet\n      description: \"\"\n      operationId: deletePet\n      parameters:\n        - name: api_key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: petId\n          in: path\n          description: Pet id to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n  /store/inventory:\n    get:\n      tags:\n        - store\n      summary: Returns pet inventories by status\n      description: Returns a map of status codes to quantities\n      operationId: getInventory\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int32\n  /store/order:\n    post:\n      tags:\n        - store\n      summary: Place an order for a pet\n      description: \"\"\n      operationId: placeOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Order\"\n        description: order placed for purchasing the pet\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid Order\n  \"/store/order/{orderId}\":\n    get:\n      tags:\n        - store\n      summary: Find purchase order by ID\n      description: For valid response try integer IDs with value >= 1 and <= 10. Other\n        values will generated exceptions\n      operationId: getOrderById\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of pet that needs to be fetched\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n            maximum: 10\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n    delete:\n      tags:\n        - store\n      summary: Delete purchase order by ID\n      description: For valid response try integer IDs with positive integer value. Negative\n        or non-integer values will generate API errors\n      operationId: deleteOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of the order that needs to be deleted\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n  /user:\n    post:\n      tags:\n        - user\n      summary: Create user\n      description: This can only be done by the logged in user.\n      operationId: createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Created user object\n        required: true\n      responses:\n        default:\n          description: successful operation\n  /user/createWithArray:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithArrayInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/createWithList:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithListInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/login:\n    get:\n      tags:\n        - user\n      summary: Logs user into the system\n      description: \"\"\n      operationId: loginUser\n      parameters:\n        - name: username\n          in: query\n          description: The user name for login\n          required: true\n          schema:\n            type: string\n        - name: password\n          in: query\n          description: The password for login in clear text\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          headers:\n            X-Rate-Limit:\n              description: calls per hour allowed by the user\n              schema:\n                type: integer\n                format: int32\n            X-Expires-After:\n              description: date in UTC when token expires\n              schema:\n                type: string\n                format: date-time\n          content:\n            application/xml:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid username/password supplied\n  /user/logout:\n    get:\n      tags:\n        - user\n      summary: Logs out current logged in user session\n      description: \"\"\n      operationId: logoutUser\n      responses:\n        default:\n          description: successful operation\n  \"/user/{username}\":\n    get:\n      tags:\n        - user\n      summary: Get user by user name\n      description: \"\"\n      operationId: getUserByName\n      parameters:\n        - name: username\n          in: path\n          description: \"The name that needs to be fetched. Use user1 for testing. \"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\n    put:\n      tags:\n        - user\n      summary: Updated user\n      description: This can only be done by the logged in user.\n      operationId: updateUser\n      parameters:\n        - name: username\n          in: path\n          description: name that need to be updated\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Updated user object\n        required: true\n      responses:\n        \"400\":\n          description: Invalid user supplied\n        \"404\":\n          description: User not found\n    delete:\n      tags:\n        - user\n      summary: Delete user\n      description: This can only be done by the logged in user.\n      operationId: deleteUser\n      parameters:\n        - name: username\n          in: path\n          description: The name that needs to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n  - url: https://petstore.swagger.io/v2\ncomponents:\n  requestBodies:\n    UserArray:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/User\"\n      description: List of user object\n      required: true\n    Pet:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n      description: Pet object that needs to be added to the store\n      required: true\n  schemas:\n    Order:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        petId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n        shipDate:\n          type: string\n          format: date-time\n        status:\n          type: string\n          description: Order Status\n          enum:\n            - placed\n            - approved\n            - delivered\n        complete:\n          type: boolean\n          default: false\n      xml:\n        name: Order\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        userStatus:\n          type: integer\n          format: int32\n          description: User Status\n      xml:\n        name: User\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Category\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Tag\n    Pet:\n      type: object\n      required:\n        - name\n        - photoUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: \"#/components/schemas/Category\"\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        tags:\n          type: array\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: \"#/components/schemas/Tag\"\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n      xml:\n        name: Pet\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        type:\n          type: string\n        message:\n          type: string","contentType":"yaml","_type":"api_spec"},{"_id":"uts_094317ac122048f28f6530be93b36e4a","parentId":"wrk_7738a5d4c5ba4c1b99da715b479dceb7","modified":1689321055979,"created":1689321055979,"name":"Example Test Suite","_type":"unit_test_suite"},{"_id":"ut_50045f08d1644f12ba8f47c2aa5212d3","parentId":"uts_094317ac122048f28f6530be93b36e4a","modified":1689599792492,"created":1689599783659,"requestId":"req_1f547190c57e4aaab723088387169f2e","name":"Returns 200","code":"const response1 = await insomnia.send();\nexpect(response1.status).to.equal(200);","_type":"unit_test"}]}